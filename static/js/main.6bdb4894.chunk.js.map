{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","filterChange","axios","defaults","baseURL","newContact","dispatch","post","then","data","catch","error","id","delete","get","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","allContacts","name","toLowerCase","includes","ContactForm","useState","setName","phone","setPhone","setId","useSelector","useDispatch","handleChangeForm","target","value","uuidv4","resetForm","onSubmit","event","preventDefault","find","contact","onCheckUnique","operations","alert","className","s","form","formInput","type","placeholder","onChange","required","minLength","ContactList","useEffect","length","listContact","map","buttonDelete","onClick","Filter","actions","App","wrapper","style","fontSize","createReducer","_","action","payload","combineReducers","store","configureStore","reducer","contactsReducer","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bdb4894.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Cb20\",\"formInput\":\"ContactForm_formInput__2cVY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContact\":\"ContactList_listContact__39T-0\",\"buttonDelete\":\"ContactList_buttonDelete__148JM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2Ha1y\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('FETCHCONTACTREQUEST');\nexport const fetchContactsSuccess = createAction('FETCHCONTACTSUCCESS');\nexport const fetchContactsError = createAction('FETCHCONTACTERROR');\n\nexport const addContactRequest = createAction('ADDCONTACTREQUEST');\nexport const addContactSuccess = createAction('ADDCONTACTSUCCESS');\nexport const addContactError = createAction('ADDCONTACTERROR');\n\nexport const removeContactRequest = createAction('REMOVECONTACTREQUEST');\nexport const removeContactSuccess = createAction('REMOVECONTACTSUCCESS');\nexport const removeContactError = createAction('REMOVECONTACTERROR');\n\nexport const filterChange = createAction('CHANGE_FILTER');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  removeContactError,\n  removeContactRequest,\n  removeContactSuccess,\n} from './contacts-actions.js';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = newContact => dispatch => {\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', newContact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\nconst removeContact = id => dispatch => {\n  dispatch(removeContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(removeContactSuccess(id)))\n    .catch(error => dispatch(removeContactError(error)));\n};\nexport default { addContact, removeContact, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) => {\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport operations from '../../redux/contacts/contacts-operations.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [id, setId] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeForm = ({ target }) => {\n    // console.log(target);\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n    setId(uuidv4());\n  };\n  const onCheckUnique = name => {\n    const existContact = contacts.find(contact => contact.name === name);\n    return existContact;\n  };\n  const handleFormSubmite = event => {\n    event.preventDefault();\n    onCheckUnique(name)\n      ? alert('Contact is exists')\n      : dispatch(operations.addContact({ id, name, phone }));\n    resetForm();\n  };\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={handleFormSubmite} className={s.form}>\n      <label className={s.formInput}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeForm}\n          required\n          minLength=\"2\"\n        />\n      </label>\n      <label className={s.formInput}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Enter phone\"\n          value={phone}\n          onChange={handleChangeForm}\n          required\n          minLength=\"10\"\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\nexport default ContactForm;\n","import s from './ContactList.module.css';\nimport { useEffect } from 'react';\nimport operations from '../../redux/contacts/contacts-operations.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onRemove = id => dispatch(operations.removeContact(id));\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, []);\n  if (contacts.length === 0) return null;\n  return (\n    <ol className={s.listContact}>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.phone}\n          <button\n            className={s.buttonDelete}\n            onClick={() => onRemove(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ol>\n  );\n};\nexport default ContactList;\n","import * as actions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.filter}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        required\n        onChange={({ target }) => dispatch(actions.filterChange(target.value))}\n        placeholder=\"Enter name for search\"\n      ></input>\n    </label>\n  );\n};\nexport default Filter;\n","import s from './App.css';\nimport ContactForm from './components/ContactForm/ContactForm.js';\nimport ContactList from './components/ContactList/ContactList.js';\nimport Filter from './components/Filter/Filter.js';\n\nexport default function App() {\n  return (\n    <div className={s.wrapper}>\n      <h2 style={{ fontSize: 40 }}>Form Contact</h2>\n      <ContactForm />\n      <h2 style={{ fontSize: 40 }}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport * as actions from './contacts-actions.js';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, action) => action.payload,\n  [actions.addContactSuccess]: (state, action) => [...state, action.payload],\n  [actions.removeContactSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\nconst filter = createReducer('', {\n  [actions.filterChange]: (_, action) => action.payload,\n});\nexport default combineReducers({\n  items,\n  filter,\n});\n","import contactsReducer from './contacts/contacts-reducer.js';\nimport { configureStore } from '@reduxjs/toolkit';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: true,\n});\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}